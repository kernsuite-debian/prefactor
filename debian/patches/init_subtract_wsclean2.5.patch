--- a/Initial-Subtract-Deep.parset
+++ b/Initial-Subtract-Deep.parset
@@ -163,11 +163,11 @@ wsclean_high1_deep.control.outputkey                 =   name
 wsclean_high1_deep.control.args_format               =   wsclean
 wsclean_high1_deep.control.max_per_node              =   1
 wsclean_high1_deep.control.error_tolerance           =   {{ error_tolerance }}
-wsclean_high1_deep.control.mapfiles_in               =   [combine_mapfile_deep.output.mapfile,do_magic_maps.output.deep_high_padsize_map,do_magic_maps.output.deep_high_size_map,do_magic_maps.output.nchansout_clean1_map,do_magic_maps.output.nwavelengths_high_map]
-wsclean_high1_deep.control.inputkeys                 =   [msfile,paddedsize,outputsize,nchansout_clean1,nwavelengths]
+wsclean_high1_deep.control.mapfiles_in               =   [combine_mapfile_deep.output.mapfile,do_magic_maps.output.deep_high_size_map,do_magic_maps.output.nchansout_clean1_map,do_magic_maps.output.nwavelengths_high_map]
+wsclean_high1_deep.control.inputkeys                 =   [msfile,outputsize,nchansout_clean1,nwavelengths]
 wsclean_high1_deep.argument.flags                    =   [-no-update-model-required,-reorder,-fitbeam,-joinchannels,msfile]
-wsclean_high1_deep.argument.size                     =   paddedsize
-wsclean_high1_deep.argument.trim                     =   outputsize
+wsclean_high1_deep.argument.size                     =   outputsize
+wsclean_high1_deep.argument.padding                  =   {{ image_padding }}
 wsclean_high1_deep.argument.channelsout              =   nchansout_clean1
 wsclean_high1_deep.argument.niter                    =   400000
 wsclean_high1_deep.argument.threshold                =   0.0
@@ -219,12 +219,12 @@ wsclean_high2_deep.control.outputkey                 =   name
 wsclean_high2_deep.control.args_format               =   wsclean
 wsclean_high2_deep.control.max_per_node              =   {{ max_imagers_per_node }}
 wsclean_high2_deep.control.error_tolerance           =   {{ error_tolerance }}
-wsclean_high2_deep.control.mapfiles_in               =   [combine_mapfile_deep.output.mapfile,mask_high_deep.output.mapfile,do_magic_maps.output.deep_high_padsize_map,do_magic_maps.output.deep_high_size_map,do_magic_maps.output.nbands_map,do_magic_maps.output.nwavelengths_high_map,mask_high_deep.output.threshold_5sig.mapfile]
-wsclean_high2_deep.control.inputkeys                 =   [msfile,fitsmask,paddedsize,outputsize,nbands,nwavelengths,threshold]
+wsclean_high2_deep.control.mapfiles_in               =   [combine_mapfile_deep.output.mapfile,mask_high_deep.output.mapfile,do_magic_maps.output.deep_high_size_map,do_magic_maps.output.nbands_map,do_magic_maps.output.nwavelengths_high_map,mask_high_deep.output.threshold_5sig.mapfile]
+wsclean_high2_deep.control.inputkeys                 =   [msfile,fitsmask,outputsize,nbands,nwavelengths,threshold]
 wsclean_high2_deep.argument.flags                    =   [-no-update-model-required,-reorder,-fitbeam,-joinchannels,msfile]
 wsclean_high2_deep.argument.fitsmask                 =   fitsmask
-wsclean_high2_deep.argument.size                     =   paddedsize
-wsclean_high2_deep.argument.trim                     =   outputsize
+wsclean_high2_deep.argument.size                     =   outputsize
+wsclean_high2_deep.argument.padding                  =   {{ image_padding }}
 wsclean_high2_deep.argument.channelsout              =   nbands
 wsclean_high2_deep.argument.niter                    =   400000
 wsclean_high2_deep.argument.threshold                =   threshold
@@ -385,11 +385,11 @@ wsclean_low1_deep.control.outputkey                  =   name
 wsclean_low1_deep.control.args_format                =   wsclean
 wsclean_low1_deep.control.max_per_node               =   {{ max_imagers_per_node }}
 wsclean_low1_deep.control.error_tolerance            =   {{ error_tolerance }}
-wsclean_low1_deep.control.mapfiles_in                =   [combine_mapfile_low_deep.output.mapfile,do_magic_maps.output.low_padsize_map,do_magic_maps.output.low_size_map,do_magic_maps.output.nchansout_clean1_map,do_magic_maps.output.nwavelengths_low_map]
-wsclean_low1_deep.control.inputkeys                  =   [msfile,paddedsize,outputsize,nchansout_clean1,nwavelengths]
+wsclean_low1_deep.control.mapfiles_in                =   [combine_mapfile_low_deep.output.mapfile,do_magic_maps.output.low_size_map,do_magic_maps.output.nchansout_clean1_map,do_magic_maps.output.nwavelengths_low_map]
+wsclean_low1_deep.control.inputkeys                  =   [msfile,outputsize,nchansout_clean1,nwavelengths]
 wsclean_low1_deep.argument.flags                     =   [-no-update-model-required,-reorder,-fitbeam,-joinchannels,msfile]
-wsclean_low1_deep.argument.size                      =   paddedsize
-wsclean_low1_deep.argument.trim                      =   outputsize
+wsclean_low1_deep.argument.size                      =   outputsize
+wsclean_low1_deep.argument.padding                   =   {{ image_padding }}
 wsclean_low1_deep.argument.channelsout               =   nchansout_clean1
 wsclean_low1_deep.argument.niter                     =   20000
 wsclean_low1_deep.argument.threshold                 =   0.0
@@ -441,12 +441,12 @@ wsclean_low2_deep.control.outputkey                  =   name
 wsclean_low2_deep.control.args_format                =   wsclean
 wsclean_low2_deep.control.max_per_node               =   {{ max_imagers_per_node }}
 wsclean_low2_deep.control.error_tolerance            =   {{ error_tolerance }}
-wsclean_low2_deep.control.mapfiles_in                =   [combine_mapfile_low_deep.output.mapfile,mask_low_deep.output.mapfile,do_magic_maps.output.low_padsize_map,do_magic_maps.output.low_size_map,do_magic_maps.output.nbands_map,do_magic_maps.output.nwavelengths_low_map,mask_low_deep.output.threshold_5sig.mapfile]
-wsclean_low2_deep.control.inputkeys                  =   [msfile,fitsmask,paddedsize,outputsize,nbands,nwavelengths,threshold]
+wsclean_low2_deep.control.mapfiles_in                =   [combine_mapfile_low_deep.output.mapfile,mask_low_deep.output.mapfile,do_magic_maps.output.low_size_map,do_magic_maps.output.nbands_map,do_magic_maps.output.nwavelengths_low_map,mask_low_deep.output.threshold_5sig.mapfile]
+wsclean_low2_deep.control.inputkeys                  =   [msfile,fitsmask,outputsize,nbands,nwavelengths,threshold]
 wsclean_low2_deep.argument.flags                     =   [-no-update-model-required,-reorder,-fitbeam,-joinchannels,msfile]
 wsclean_low2_deep.argument.fitsmask                  =   fitsmask
-wsclean_low2_deep.argument.size                      =   paddedsize
-wsclean_low2_deep.argument.trim                      =   outputsize
+wsclean_low2_deep.argument.size                      =   outputsize
+wsclean_low2_deep.argument.padding                   =   {{ image_padding }}
 wsclean_low2_deep.argument.channelsout               =   nbands
 wsclean_low2_deep.argument.niter                     =   20000
 wsclean_low2_deep.argument.threshold                 =   threshold
--- a/Initial-Subtract.parset
+++ b/Initial-Subtract.parset
@@ -139,11 +139,11 @@ wsclean_high1.control.outputkey                 =   name
 wsclean_high1.control.args_format               =   wsclean
 wsclean_high1.control.max_per_node              =   {{ max_imagers_per_node }}
 wsclean_high1.control.error_tolerance           =   {{ error_tolerance }}
-wsclean_high1.control.mapfiles_in               =   [do_magic_maps.output.groupmap,do_magic_maps.output.high_padsize_map,do_magic_maps.output.high_size_map]
-wsclean_high1.control.inputkeys                 =   [msfile,paddedsize,outputsize]
+wsclean_high1.control.mapfiles_in               =   [do_magic_maps.output.groupmap,do_magic_maps.output.high_size_map]
+wsclean_high1.control.inputkeys                 =   [msfile,outputsize]
 wsclean_high1.argument.flags                    =   [-no-update-model-required,-reorder,-fitbeam,msfile]
-wsclean_high1.argument.size                     =   paddedsize
-wsclean_high1.argument.trim                     =   outputsize
+wsclean_high1.argument.size                     =   outputsize
+wsclean_high1.argument.padding                  =   {{ image_padding }}
 wsclean_high1.argument.niter                    =   40000
 wsclean_high1.argument.threshold                =   0.0
 wsclean_high1.argument.pol                      =   I
@@ -198,12 +198,12 @@ wsclean_high2.control.outputkey                 =   name
 wsclean_high2.control.args_format               =   wsclean
 wsclean_high2.control.max_per_node              =   {{ max_imagers_per_node }}
 wsclean_high2.control.error_tolerance           =   {{ error_tolerance }}
-wsclean_high2.control.mapfiles_in               =   [do_magic_maps.output.groupmap,mask_high.output.mapfile,do_magic_maps.output.high_padsize_map,do_magic_maps.output.high_size_map,mask_high.output.threshold_5sig.mapfile]
-wsclean_high2.control.inputkeys                 =   [msfile,fitsmask,paddedsize,outputsize,threshold]
+wsclean_high2.control.mapfiles_in               =   [do_magic_maps.output.groupmap,mask_high.output.mapfile,do_magic_maps.output.high_size_map,mask_high.output.threshold_5sig.mapfile]
+wsclean_high2.control.inputkeys                 =   [msfile,fitsmask,outputsize,threshold]
 wsclean_high2.argument.flags                    =   [-no-update-model-required,-reorder,-fitbeam,msfile]
 wsclean_high2.argument.fitsmask                 =   fitsmask
-wsclean_high2.argument.size                     =   paddedsize
-wsclean_high2.argument.trim                     =   outputsize
+wsclean_high2.argument.size                     =   outputsize
+wsclean_high2.argument.padding                  =   {{ image_padding }}
 wsclean_high2.argument.niter                    =   40000
 wsclean_high2.argument.threshold                =   threshold
 wsclean_high2.argument.pol                      =   I
@@ -329,11 +329,11 @@ wsclean_low1.control.outputkey                  =   name
 wsclean_low1.control.args_format                =   wsclean
 wsclean_low1.control.max_per_node               =   {{ max_imagers_per_node }}
 wsclean_low1.control.error_tolerance            =   {{ error_tolerance }}
-wsclean_low1.control.mapfiles_in                =   [regroup_map.output.mapfile,do_magic_maps.output.low_padsize_map,do_magic_maps.output.low_size_map]
-wsclean_low1.control.inputkeys                  =   [msfile,paddedsize,outputsize]
+wsclean_low1.control.mapfiles_in                =   [regroup_map.output.mapfile,do_magic_maps.output.low_size_map]
+wsclean_low1.control.inputkeys                  =   [msfile,outputsize]
 wsclean_low1.argument.flags                     =   [-no-update-model-required,-reorder,-fitbeam,msfile]
-wsclean_low1.argument.size                      =   paddedsize
-wsclean_low1.argument.trim                      =   outputsize
+wsclean_low1.argument.size                      =   outputsize
+wsclean_low1.argument.padding                   =   {{ image_padding }}
 wsclean_low1.argument.niter                     =   20000
 wsclean_low1.argument.threshold                 =   0.0
 wsclean_low1.argument.pol                       =   I
@@ -374,12 +374,12 @@ wsclean_low2.control.outputkey                  =   name
 wsclean_low2.control.args_format                =   wsclean
 wsclean_low2.control.max_per_node               =   {{ max_imagers_per_node }}
 wsclean_low2.control.error_tolerance            =   {{ error_tolerance }}
-wsclean_low2.control.mapfiles_in                =   [regroup_map.output.mapfile,mask_low.output.mapfile,do_magic_maps.output.low_padsize_map,do_magic_maps.output.low_size_map,mask_low.output.threshold_5sig.mapfile]
-wsclean_low2.control.inputkeys                  =   [msfile,fitsmask,paddedsize,outputsize,threshold]
+wsclean_low2.control.mapfiles_in                =   [regroup_map.output.mapfile,mask_low.output.mapfile,do_magic_maps.output.low_size_map,mask_low.output.threshold_5sig.mapfile]
+wsclean_low2.control.inputkeys                  =   [msfile,fitsmask,outputsize,threshold]
 wsclean_low2.argument.flags                     =   [-no-update-model-required,-reorder,-fitbeam,msfile]
 wsclean_low2.argument.fitsmask                  =   fitsmask
-wsclean_low2.argument.size                      =   paddedsize
-wsclean_low2.argument.trim                      =   outputsize
+wsclean_low2.argument.size                      =   outputsize
+wsclean_low2.argument.padding                   =   {{ image_padding }}
 wsclean_low2.argument.niter                     =   20000
 wsclean_low2.argument.threshold                 =   threshold
 wsclean_low2.argument.pol                       =   I
